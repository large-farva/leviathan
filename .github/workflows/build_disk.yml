name: Build Leviathan Disk Images

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - './disk_config/disk.toml'
      - './.github/workflows/build_disk.yml'

env:
  IMAGE_NAME: ${{ github.event.repository.name }}
  IMAGE_REGISTRY: "ghcr.io/${{ github.repository_owner }}"
  DEFAULT_TAG: "latest"
  BIB_IMAGE: "ghcr.io/lorbuschris/bootc-image-builder:20250608"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    name: Build Disk Artifacts
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: read
      id-token: write

    steps:
      - name: Prepare environment
        run: |
          USER_UID=$(id -u)
          USER_GID=$(id -g)
          echo "IMAGE_REGISTRY=${IMAGE_REGISTRY,,}" >> $GITHUB_ENV
          echo "IMAGE_NAME=${IMAGE_NAME,,}" >> $GITHUB_ENV
          echo "USER_UID=${USER_UID}" >> $GITHUB_ENV
          echo "USER_GID=${USER_GID}" >> $GITHUB_ENV

      - name: Maximize build space
        uses: ublue-os/remove-unwanted-software@cc0becac701cf642c8f0a6613bbdaf5dc36b259e
        with:
          remove-codeql: true

      - name: Checkout source
        uses: actions/checkout@v4

      - name: Build ISO
        id: build_iso
        uses: osbuild/bootc-image-builder-action@main
        with:
          builder-image: ${{ env.BIB_IMAGE }}
          config-file: ./disk_config/disk.toml
          image: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.DEFAULT_TAG }}
          chown: ${{ env.USER_UID }}:${{ env.USER_GID }}
          types: anaconda-iso
          additional-args: --use-librepo=True

      - name: Build VM Disks
        id: build_disks
        uses: osbuild/bootc-image-builder-action@main
        with:
          builder-image: ${{ env.BIB_IMAGE }}
          config-file: ./disk_config/disk.toml
          image: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.DEFAULT_TAG }}
          chown: ${{ env.USER_UID }}:${{ env.USER_GID }}
          types: qcow2,raw
          additional-args: --use-librepo=True --rootfs=ext4

      - name: Upload disk artifacts
        uses: actions/upload-artifact@v4
        with:
          name: disk-images
          path: ${{ steps.build_disks.outputs.output-directory }}
          if-no-files-found: error
          retention-days: 0
          compression-level: 0
          overwrite: true
