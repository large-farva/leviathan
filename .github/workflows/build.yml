name: Build Leviathan Container Images
on:
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * 0'
  push:
    branches:
      - main
    paths-ignore:
      - '**/README.md'
  workflow_dispatch:

env:
  IMAGE_NAME: "${{ github.event.repository.name }}"
  IMAGE_DESC: "Personal Bazzite and Bluefin based images."
  IMAGE_REGISTRY: "ghcr.io/${{ github.repository_owner }}"
  ARTIFACTHUB_LOGO_URL: "https://avatars.githubusercontent.com/u/120078124?s=200&v=4"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build_and_push:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get current date
        id: date
        run: |
          echo "date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_OUTPUT

      # ——— Main (leviathan) metadata —————————————————————
      - name: Image Metadata (main)
        id: meta_main
        uses: docker/metadata-action@v5
        with:
          tags: |
            type=raw,value=latest
            type=raw,value=latest.{{date 'YYYYMMDD'}}
            type=raw,value={{date 'YYYYMMDD'}}
            type=sha,enable=${{ github.event_name == 'pull_request' }}
            type=ref,event=pr
          labels: |
            io.artifacthub.package.readme-url=https://raw.githubusercontent.com/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}/refs/heads/main/README.md
            org.opencontainers.image.created=${{ steps.date.outputs.date }}
            org.opencontainers.image.description=${{ env.IMAGE_DESC }}
            org.opencontainers.image.documentation=https://raw.githubusercontent.com/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}/refs/heads/main/README.md
            org.opencontainers.image.source=https://github.com/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}/blob/main/Containerfile
            org.opencontainers.image.title=${{ env.IMAGE_NAME }}
            org.opencontainers.image.url=https://github.com/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
            org.opencontainers.image.vendor=${{ github.repository_owner }}
            org.opencontainers.image.version=latest
            org.opencontainers.image.base.name=fedora
            org.opencontainers.image.base.version=41
            io.artifacthub.package.deprecated=false
            io.artifacthub.package.keywords=bootc,ublue,universal-blue
            io.artifacthub.package.license=Apache-2.0
            io.artifacthub.package.logo-url=${{ env.ARTIFACTHUB_LOGO_URL }}
            io.artifacthub.package.prerelease=false
            containers.bootc=1
          sep-tags: " "
          sep-annotations: " "

      # ——— DX (leviathan-dx) metadata —————————————————————
      - name: Image Metadata (dx)
        id: meta_dx
        uses: docker/metadata-action@v5
        with:
          tags: |
            type=raw,value=dx-latest
            type=raw,value=dx-latest.{{date 'YYYYMMDD'}}
            type=raw,value=dx-{{date 'YYYYMMDD'}}
            type=sha,enable=${{ github.event_name == 'pull_request' }}
            type=ref,event=pr
          labels: ${{ steps.meta_main.outputs.labels }}
          sep-tags: " "
          sep-annotations: " "

      - name: Build Leviathan (main)
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: Containerfile
          target: leviathan
          image: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: ${{ steps.meta_main.outputs.tags }}
          labels: ${{ steps.meta_main.outputs.labels }}
          oci: false

      - name: Build Leviathan-DX
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: Containerfile
          target: leviathan-dx
          image: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}-dx
          tags: ${{ steps.meta_dx.outputs.tags }}
          labels: ${{ steps.meta_dx.outputs.labels }}
          oci: false

      - name: Login to GHCR
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Lowercase Registry
        id: registry_case
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ env.IMAGE_REGISTRY }}

      - name: Lowercase Image Name (main)
        id: image_case_main
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ env.IMAGE_NAME }}

      - name: Lowercase Image Name (dx)
        id: image_case_dx
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ env.IMAGE_NAME }}-dx

      - name: Push Leviathan (main)
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        uses: redhat-actions/push-to-registry@v2
        with:
          registry: ${{ steps.registry_case.outputs.lowercase }}
          image: ${{ steps.image_case_main.outputs.lowercase }}
          tags: ${{ steps.meta_main.outputs.tags }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Push Leviathan-DX
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        uses: redhat-actions/push-to-registry@v2
        with:
          registry: ${{ steps.registry_case.outputs.lowercase }}
          image: ${{ steps.image_case_dx.outputs.lowercase }}
          tags: ${{ steps.meta_dx.outputs.tags }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Install Cosign
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        uses: sigstore/cosign-installer@v3

      - name: Sign Leviathan (main)
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        run: |
          FULL="${{ steps.registry_case.outputs.lowercase }}/${{ steps.image_case_main.outputs.lowercase }}"
          for t in ${{ steps.meta_main.outputs.tags }}; do
            cosign sign -y --key env://COSIGN_PRIVATE_KEY $FULL:$t
          done
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}

      - name: Sign Leviathan-DX
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        run: |
          FULL="${{ steps.registry_case.outputs.lowercase }}/${{ steps.image_case_dx.outputs.lowercase }}"
          for t in ${{ steps.meta_dx.outputs.tags }}; do
            cosign sign -y --key env://COSIGN_PRIVATE_KEY $FULL:$t
          done
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}
